{"version":3,"file":"pb.module.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/components/Theme.js","../src/components/Button/AbstractButton.js","../src/components/Button/ButtonForm.js","../src/components/Button/ButtonNav.js","../src/components/Button/ButtonProgram.js","../src/components/Button/StartButton.js","../src/components/Button/ButtonIconLarge.js","../src/components/Button/ButtonIconSmall.js","../src/components/Window/WindowFrame.js","../src/components/StandardMenu/StandardMenuItem.js","../src/components/StandardMenu/StandardMenu.js","../src/components/StandardMenu/withMenuWrapper.js","../src/components/Icon/AbstractIcon.js","../src/components/Icon/ExplorerIcon.js","../src/components/Icon/ListIcon.js","../src/components/ExplorerView/ExplorerView.js","../src/components/Inputs/Toggle.js","../src/components/Inputs/Checkbox.js","../src/components/Inputs/Radio.js","../src/components/Inputs/InputText.js","../src/components/Inputs/Select.js","../src/components/Inputs/SelectBox.js","../src/components/Inputs/SelectMultipleSimple.js","../src/components/MenuBar/index.js","../src/components/StartMenu/index.js","../src/components/TaskBar/Notifier.js","../src/components/TaskBar/Notifications.js","../src/components/TaskBar/index.js","../src/components/Window/WindowAbstract.js","../src/components/Window/WindowAlert.js","../src/components/Window/WindowProgram.js","../src/components/Window/OptionsList/index.js","../src/components/Window/WindowExplorer.js","../src/components/Window/DetailsSection/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport '../_scss/w98/theme.scss';\n\nconst Theme = props => (\n  <div className={cx('w98', props.className)} style={ props.style }>\n    {props.children}\n  </div>\n);\n\nTheme.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.shape(),\n};\n\nexport default Theme;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport './styles/AbstractButton.scss';\n\nclass AbstractButton extends Component {\n  state = {\n    mouseDown: false,\n  }\n\n  handleMouse = (func, mouseDown) => {\n    this.setState({ mouseDown });\n    if (func) {\n      func();\n    }\n  }\n\n  handleClick = (e) => {\n    this.button.focus();\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  }\n\n  handleBlur = (e) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n  }\n\n  handleContextMenu = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.button.focus();\n    if (this.props.onContextMenu) {\n      this.props.onContextMenu(e);\n    }\n  }\n\n  handleDoubleClick = (e) => {\n    if (this.props.onDoubleClick) {\n      this.props.onDoubleClick(e);\n    }\n  }\n\n  render() {\n    const { props } = this;\n\n    return (\n      <button\n        ref={(btn) => { this.button = btn; }}\n        className={ cx(\n          'btn',\n          props.className,\n          {\n            'clicked': this.state.mouseDown,\n            'btn--active': props.isActive,\n            'btn--disabled': props.isDisabled,\n          },\n        )}\n        onClick={ (e) => this.handleClick(e) }\n        onDoubleClick={(e) => this.handleDoubleClick(e) }\n        onMouseDown={() => this.handleMouse(props.onMouseDown, true)}\n        onMouseUp={() => this.handleMouse(props.onMouseUp, false)}\n        onBlur={(e) => this.handleBlur(e) }\n        onContextMenu={\n          this.props.onContextMenu && (e => this.handleContextMenu(e))\n        }\n        disabled={props.isDisabled}\n        style={ props.style }\n      >\n        { props.children }\n      </button>\n    );\n  }\n}\n\nexport const commonButtonPropTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n  ]),\n\n  className: PropTypes.string,\n  isActive: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n};\n\nAbstractButton.propTypes = {\n  ...commonButtonPropTypes,\n  onDoubleClick: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  style: PropTypes.shape(), // Todo: Needs custom prop\n};\n\nexport default AbstractButton;\n","import React from 'react';\nimport cx from 'classnames';\nimport Button, { commonButtonPropTypes } from './AbstractButton';\n\nimport './styles/ButtonForm.scss';\n\nconst ButtonForm = props => (\n  <Button\n    className={ cx('ButtonForm', props.className) }\n    onClick={ props.onClick }\n    isActive={ props.isActive }\n    isDisabled={props.isDisabled}\n  >\n    { props.children }\n  </Button>\n);\n\nButton.propTypes = {\n  ...commonButtonPropTypes,\n};\n\nexport default ButtonForm;\n","import React from 'react';\nimport cx from 'classnames';\nimport Button, { commonButtonPropTypes } from './AbstractButton';\n\nimport './styles/ButtonNav.scss';\n\nconst ButtonNav = props => (\n  <Button\n    className={ cx('ButtonNav', props.className) }\n    onClick={ props.onClick }\n    isActive={ props.isActive }\n    isDisabled={ props.isDisabled }\n  />\n);\n\nButtonNav.propTypes = commonButtonPropTypes;\n\nexport default ButtonNav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Button, { commonButtonPropTypes } from './AbstractButton';\n\nimport './styles/ButtonProgram.scss';\n\nconst ButtonProgram = props => (\n  <Button\n    className={ cx('ButtonProgram', props.className) }\n    onClick={ props.onClick }\n    isActive={ props.isActive }\n    style={ { backgroundImage: `url(${props.icon})`, ...props.style }}\n  >\n    { props.children }\n  </Button>\n);\n\nButtonProgram.propTypes = {\n  ...commonButtonPropTypes,\n  icon: PropTypes.any,\n};\n\nexport default ButtonProgram;\n","import React from 'react';\nimport cx from 'classnames';\nimport Button, { commonButtonPropTypes } from './AbstractButton';\n\nimport './styles/StartButton.scss';\n\nconst StartButton = props => (\n  <Button\n    className={ cx('StartButton', props.className) }\n    onClick={ props.onClick }\n    onBlur={ props.onBlur }\n    isActive={ props.isActive }\n  />\n);\n\nStartButton.propTypes = commonButtonPropTypes;\n\n\nexport default StartButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Button, { commonButtonPropTypes } from './AbstractButton';\n\nimport './styles/ButtonIconLarge.scss';\n\nconst ButtonIconLarge = props => (\n  <Button\n    className={ cx('ButtonIconLarge', props.className) }\n    onClick={ props.onClick }\n    isDisabled={ props.isDisabled }\n  >\n    <img src={props.icon} />\n    { props.title }\n  </Button>\n);\n\nButtonIconLarge.propTypes = {\n  ...commonButtonPropTypes,\n  icon: PropTypes.string,\n  title: PropTypes.string,\n};\n\n\nexport default ButtonIconLarge;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Button, { commonButtonPropTypes } from './AbstractButton';\n\nimport './styles/ButtonIconSmall.scss';\n\nconst ButtonIconSmall = props => (\n  <Button\n    className={ cx('ButtonIconSmall', props.className) }\n    onClick={ props.onClick }\n    isDisabled={ props.isDisabled }\n    isActive={ props.isActive }\n  >\n    <img src={props.icon} />\n  </Button>\n);\n\nButtonIconSmall.propTypes = {\n  ...commonButtonPropTypes,\n  icon: PropTypes.string,\n};\n\n\nexport default ButtonIconSmall;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './styles/WindowFrame.scss';\n\nconst WindowFrame = props => (\n  <div className={ cx('window', props.className, { 'window--resizable': props.resizable })}>\n    {props.children}\n  </div>\n);\n\nWindowFrame.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  resizable: PropTypes.bool,\n};\n\nexport default WindowFrame;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport StandardMenu from './StandardMenu';\n\nconst StandardMenuItem = props => (\n  <div\n    className={\n      cx(\n        'standard-menu__item',\n        props.className,\n        props.type,\n        { 'standard-menu__item--has-options': props.options, 'active': props.isActive },\n      )\n    }\n    onMouseEnter={props.mouseEnterItem}\n    onTouchStart={props.mouseEnterItem}\n  >\n    <button\n      className={\n        cx(\n          'StandardMenuItem__button',\n          'standard-menu__item__button',\n          { disabled: props.isDisabled },\n        )\n      }\n      onClick={!props.options ? props.closeOnClick(props.onClick) : undefined}\n      style={props.icon ? { backgroundImage: `url('${props.icon}')` } : undefined}\n      value={props.value}\n      disabled={props.isDisabled}\n    >\n      {props.title}\n    </button>\n    { props.options && (\n      <StandardMenu\n        className=\"standard-menu__item__child\"\n        options={props.options}\n        value={props.value}\n        mouseEnterItem={props.mouseEnterItem}\n        closeOnClick={props.closeOnClick}\n      />\n    )}\n  </div>\n);\n\nStandardMenuItem.defaultProps = {\n  onClick: () => {},\n  closeOnClick: () => { console.error('Menus require a closeOnClick prop to function correctly'); }, // eslint-disable-line\n  value: [],\n};\n\nStandardMenuItem.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  value: PropTypes.arrayOf(PropTypes.string),\n  mouseEnterItem: PropTypes.func,\n  options: PropTypes.any,\n  isDisabled: PropTypes.bool,\n  isActive: PropTypes.bool,\n  onClick: PropTypes.func,\n  type: PropTypes.string,\n};\n\nexport const standardMenuItemProps = StandardMenuItem.propTypes;\n\n\nexport default StandardMenuItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Window from '../Window/WindowFrame';\nimport StandardMenuItem from './StandardMenuItem';\n\nimport './StandardMenu.scss';\n\nconst DIVIDER = 'divider';\n\nconst flattenWithDividers = (options) => options.reduce((acc, val) => {\n  if (!Array.isArray(val)) {\n    acc.push(val);\n  } else {\n    acc = acc.concat([`${DIVIDER}--start`, ...val, `${DIVIDER}--end`]);\n  }\n  return acc;\n}, []);\n\nconst StandardMenu = props => {\n  const options = flattenWithDividers(props.options);\n  const hasOptions = Array.isArray(options);\n  return (\n    <Window\n      className={ cx(\n        'StandardMenu', props.className, props.direction,\n        { 'StandardMenu--visible': props.isVisible },\n      )}\n    >\n      { hasOptions && options.length > 0 ? (\n        options.map(option => {\n          if (typeof option === 'string' && option.includes(DIVIDER)) {\n            return <div key={option.toString()} className={`${DIVIDER} ${option}`} />;\n          }\n          return (\n            <StandardMenuItem\n              key={`StandardMenu-item-${option.title}`}\n              {...option}\n              value={[ ...props.value, option.title ]}\n              closeOnClick={props.closeOnClick}\n              mouseEnterItem={props.mouseEnterItem}\n            />\n          );\n        })) : (\n        <StandardMenuItem\n          title=\"(Empty)\"\n          className={'StandardMenuItem--empty'}\n          mouseEnterItem={props.mouseEnterItem}\n          closeOnClick={props.closeOnClick}\n          isDisabled\n        />\n      )}\n    </Window>\n  );\n};\n\nStandardMenu.defaultProps = {\n  value: [],\n};\n\nexport const standardMenuProps = {\n  value: PropTypes.arrayOf(PropTypes.string),\n  mouseEnterItem: PropTypes.func,\n  className: PropTypes.string,\n  direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n  options: PropTypes.any,\n  isVisible: PropTypes.bool,\n};\n\nStandardMenu.propTypes = standardMenuProps;\n\nexport default StandardMenu;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport clone from 'clone';\nimport StandardMenu, { standardMenuProps } from './StandardMenu';\n\nconst withContextLogic = ContextButton => {\n  return class StandardMenuSimple extends Component {\n    static defaultProps = {\n      value: [],\n    };\n    static propTypes = {\n      ...standardMenuProps,\n      onClick: PropTypes.func,\n      onBlur: PropTypes.func,\n      onContextMenu: PropTypes.func,\n    };\n\n    static getDerivedStateFromProps(nextProps, prevState){\n      if(nextProps.isActive!==prevState.isActive){\n        return {\n          options: nextProps.options,\n          isActive: nextProps.isActive,\n        };\n      }\n      else return null;\n    }\n\n    state = {\n      options: this.props.options,\n      isActive: this.props.isActive,\n      isOpen: false,\n    };\n\n    updateActive(activeFields, newOptions, idx = 0) {\n      if (activeFields.length <= idx) {\n        return newOptions;\n      }\n      const changeIdx = newOptions.findIndex((option, optIdx) => {\n        if (Array.isArray(option)) {\n          const subIdx = option.findIndex( opt => opt.title === activeFields[idx]);\n          if ( subIdx !== -1) {\n            newOptions[optIdx][subIdx].isActive = true;\n            if (newOptions[optIdx][subIdx].options) {\n              newOptions[optIdx][subIdx].options = this.updateActive(\n                activeFields,\n                newOptions[optIdx][subIdx].options,\n                idx + 1,\n              );\n            }\n            return;\n          }\n        }\n        return option.title === activeFields[idx];\n      });\n      if (changeIdx !== -1) {\n        newOptions[changeIdx].isActive = true;\n        newOptions[changeIdx].options = this.updateActive(activeFields, newOptions[changeIdx].options, idx + 1);\n      }\n      return newOptions;\n    }\n\n    mouseEnterItem = (e) => {\n      if (e.target.value) {\n        const newOptions = this.updateActive(\n          e.target.value.split(','),\n          clone(this.props.options),\n          0,\n        );\n        this.setState({ options: newOptions });\n      }\n    }\n    addBlurListener = () => {\n      document.body.addEventListener('click', this.handleBlur);\n      document.body.addEventListener('mousedown', this.handleBlur);\n    }\n    removeBlurListener = () => {\n      document.body.removeEventListener('click', this.handleBlur);\n      document.body.removeEventListener('mousedown', this.handleBlur);\n    }\n\n    buttonClick = () => {\n      if (this.state.isOpen) {\n        this.removeBlurListener();\n        this.setState({ isOpen: false, options: this.props.options });\n      } else {\n        this.addBlurListener();\n        this.setState({ isOpen: true, options: this.props.options });\n      }\n    }\n    handleEvent = newState => onEvent => e => {\n      if (onEvent) { onEvent(e); }\n      if (newState) { this.setState(newState); }\n    }\n    handleContextMenu = e => this.handleEvent({ isOpen: true })(this.props.onContextMenu)(e);\n    handleBlur = (e) => {\n      if (this.el && !this.el.contains(e.target)) {\n        this.handleEvent({ isOpen: false, options: this.props.options })(this.props.onBlur)(e);\n      }\n    }\n    handleSelectionClose = this.handleEvent({ isOpen: false, options: this.props.options });\n\n    render() {\n      const renderedMenu = (\n        <StandardMenu\n          options={this.state.options}\n          className=\"standard-menu__wrapper\"\n          mouseEnterItem={(e) => this.mouseEnterItem(e)}\n          closeOnClick={this.handleSelectionClose}\n        />\n      );\n\n      if (ContextButton) {\n        const { className, ...props} = this.props;\n        return (\n          <div\n            ref={(el) => { this.el = el; }}\n            className={ cx(\n              'standard-menu-wrapper',\n              className,\n              { 'active': this.state.isOpen }\n            )}\n          >\n            <ContextButton\n              {...props}\n              onClick={this.buttonClick}\n              className={this.state.isOpen ? 'active' : ''}\n              onContextMenu={this.props.onContextMenu && (e => this.handleContextMenu(e))}\n            >\n              { props.children }\n            </ContextButton>\n            { renderedMenu }\n          </div>\n        );\n      }\n      return renderedMenu;\n    }\n  };\n};\n\nexport default withContextLogic;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nclass AbstractIcon extends Component {\n  state = {\n    doubleReady: false,\n  }\n\n  disableAction = () => {\n    this.setState({ doubleReady: false });\n  }\n\n  checkDoubleClick = () => {\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n\n    if (!this.props.onDoubleClick) {\n      return;\n    }\n\n    if(this.state.doubleReady) {\n      this.props.onDoubleClick();\n      this.disableAction();\n    } else {\n      this.setState({ doubleReady: true });\n      setTimeout(this.disableAction, 700);\n    }\n  }\n\n  handleClick = () => {\n    this.icon.focus();\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n  }\n\n  handleContextMenu = (e) => {\n    e.preventDefault();\n    this.icon.focus();\n    if (this.props.onContextMenu) {\n      this.props.onContextMenu(e);\n    }\n    //return false;\n  }\n\n  render() {\n    const { props } = this;\n\n    const iconProps = {\n      onDoubleClick: props.onDoubleClick,\n      onClick: this.handleClick,\n      onContextMenu: this.props.onContextMenu && this.handleContextMenu,\n      className: cx('icon', props.className),\n      title: props.alt,\n      value: props.value,\n      ref: (icon) => { this.icon = icon; },\n    };\n\n    const contents = (\n      <React.Fragment>\n        <div\n          className=\"icon__icon\"\n          style={ { backgroundImage: `url('${props.icon}')` } }\n        />\n        <div className=\"icon__text\">{ props.title }</div>\n      </React.Fragment>\n    );\n\n    if (this.props.onClick || this.props.onDoubleClick ) {\n      return (\n        <button\n          ref={(icon) => { this.icon = icon; }}\n          {...iconProps}\n        >\n          { contents }\n        </button>\n      );\n    }\n    return (\n      <div {...iconProps}>\n        { contents }\n      </div>\n    );\n  }\n}\n\nexport const iconProps = {\n  title: PropTypes.string,\n  icon: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  alt: PropTypes.string,\n  value: PropTypes.any,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onContextMenu: PropTypes.func,\n};\n\nAbstractIcon.propTypes = iconProps;\n\nexport default AbstractIcon;\n","import React from 'react';\nimport cx from 'classnames';\nimport AbstractIcon, { iconProps } from './AbstractIcon';\nimport './styles/ExplorerIcon.scss';\n\nconst ExplorerIcon = props => (\n  <AbstractIcon\n    onClick={ props.onClick }\n    onDoubleClick={ props.onDoubleClick }\n    onContextMenu={ props.onContextMenu }\n    alt={ props.alt }\n    className={ cx('ExplorerIcon', props.className) }\n    icon={ props.icon }\n    title={ props.title }\n  />\n);\n\nExplorerIcon.propTypes = iconProps;\n\nexport default ExplorerIcon;\n","import React from 'react';\nimport cx from 'classnames';\nimport AbstractIcon, { iconProps } from './AbstractIcon';\nimport './styles/ListIcon.scss';\n\nconst ListIcon = props => (\n  <AbstractIcon\n    onClick={ props.onClick }\n    onDoubleClick={ props.onDoubleClick }\n    onContextMenu={ props.onContextMenu }\n    alt={ props.alt }\n    className={ cx('ListIcon', props.className) }\n    icon={ props.icon }\n    title={ props.title }\n    value={ props.value }\n  />\n);\n\nListIcon.propTypes = iconProps;\n\nexport default ListIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './styles/ExplorerView.scss';\n\nconst ExplorerView = props => (\n  <div\n    className={cx('ExplorerView', props.className,\n      {\n        'ExplorerView--fixed-width': props.fixedWidth,\n        'ExplorerView--fixed-height': props.fixedHeight,\n      }\n    )}\n    style={{\n      backgroundColor: props.style.backgroundColor,\n      backgroundImage: props.style.backgroundImage,\n      backgroundSize: props.style.backgroundSize,\n      backgroundRepeat: props.style.backgroundRepeat,\n      backgroundPosition: props.style.backgroundPosition,\n    }}\n  >\n    { props.children }\n  </div>\n);\n\nExplorerView.defaultProps = {\n  style: {},\n};\n\nExplorerView.propTypes = {\n  children: PropTypes.node,\n  fixedHeight: PropTypes.bool,\n  fixedWidth: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default ExplorerView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nconst Toggle = props => (\n  <div className={ cx('Toggle', props.className)}>\n    <input\n      type={props.type}\n      id={props.id}\n      disabled={props.isDisabled}\n      value={props.value}\n      checked={props.checked}\n      onChange={props.onChange}\n      name={props.name}\n    />\n    <label htmlFor={props.id}>\n      <span>\n        {props.label}\n      </span>\n    </label>\n  </div>\n);\n\nconst toggleProps = {\n  label: PropTypes.string,\n  type: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  isDisabled: PropTypes.bool,\n};\n\nToggle.propTypes = toggleProps;\n\nexport default Toggle;\n","import React from 'react';\nimport cx from 'classnames';\nimport Toggle from './Toggle';\n\nimport './styles/Checkbox.scss';\n\nconst Checkbox = props => (\n  <Toggle\n    {...props}\n    className={ cx('Checkbox', props.className)}\n    type=\"checkbox\"\n  />\n);\n\nCheckbox.propTypes = Toggle.propTypes;\n\nexport default Checkbox;\n","\nimport React from 'react';\nimport Toggle from './Toggle';\n\nimport './styles/Radio.scss';\n\nconst Radio = props => (\n  <Toggle\n    {...props}\n    className=\"Radio\"\n    type=\"radio\"\n  />\n);\n\nRadio.propTypes = Toggle.propTypes;\n\nexport default Radio;\n","import React, { Component } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport './styles/InputText.scss';\n\nclass InputText extends Component {\n  static defaultProps = {\n    onChange: () => {},\n    onKeyDown: () => {},\n    onBlur: () => {},\n    onFocus: () => {},\n  }\n\n  state = {\n    value: this.props.initialValue,\n  }\n\n  handleChange = (e) => {\n    if (this.props.initialValue) {\n      this.setState({\n        value: e.target.value,\n      });\n    }\n\n    this.props.onChange(e.target.value);\n  }\n\n  handleBlur = () => {\n    this.props.onBlur(this.state.value);\n  }\n\n  render() {\n    return (\n      <input\n        type=\"text\"\n        className={ cx('InputText', this.props.className)}\n        value={this.props.initialValue ? this.state.value : this.props.value}\n        id={this.props.id}\n        disabled={this.props.isDisabled}\n        name={this.props.name || this.props.id}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.props.onKeyDown}\n        onFocus={this.props.onFocus}\n      />\n    );\n  }\n}\n\nInputText.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.string,\n  initialValue: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  onBlur: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func.isRequired,\n  onKeyDown: PropTypes.func.isRequired,\n};\n\nexport default InputText;\n","import React, { Component } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport ReactSelect from 'react-select';\nimport './styles/Select.scss';\n\nconst DefaultOptionComponent = props => <div {...props} />;\n\n// copied straight from react select demos with slight changes\nexport const menuRenderer = ({\n  focusedOption,\n  focusOption,\n  inputValue,\n  instancePrefix,\n  onFocus,\n  onOptionRef,\n  onSelect,\n  optionClassName,\n  optionComponent,\n  options,\n  removeValue,\n  selectValue,\n  valueArray,\n  valueKey,\n}) => {\n  let Option = optionComponent || DefaultOptionComponent;\n\n  return options.map((option, i) => {\n    let isSelected = valueArray && valueArray.some(x => x[valueKey] === option[valueKey]);\n    let isFocused = option === focusedOption;\n    let optionClass = cx(optionClassName, {\n      'Select-option': true,\n      'Select-option--icon': true,\n      'is-selected': isSelected,\n      'is-focused': isFocused,\n      'is-disabled': option.disabled,\n    });\n\n    return (\n      <Option\n        className={optionClass}\n        focusOption={focusOption}\n        inputValue={inputValue}\n        instancePrefix={instancePrefix}\n        isDisabled={option.disabled}\n        isFocused={isFocused}\n        isSelected={isSelected}\n        key={`option-${i}-${option[valueKey]}`}\n        onFocus={onFocus}\n        onSelect={onSelect}\n        option={option}\n        optionIndex={i}\n        ref={ref => { onOptionRef(ref, isFocused); }}\n        removeValue={removeValue}\n        selectValue={selectValue}\n        backgroundImage={option.icon}\n      >\n        <span>\n          {option.label}\n        </span>\n      </Option>\n    );\n  });\n};\n\nmenuRenderer.propTypes = {\n  focusedOption: PropTypes.object,\n  inputValue: PropTypes.string,\n  instancePrefix: PropTypes.string,\n  optionClassName: PropTypes.string,\n  options: PropTypes.array,\n  valueArray: PropTypes.array,\n  valueKey: PropTypes.string,\n  focusOption: PropTypes.func,\n  onFocus: PropTypes.func,\n  onOptionRef: PropTypes.func,\n  onSelect: PropTypes.func,\n  optionComponent: PropTypes.func,\n  optionRenderer: PropTypes.func,\n  removeValue: PropTypes.func,\n  selectValue: PropTypes.func,\n};\n\nconst ValueRenderer = props => (\n  <div style={{ backgroundImage: props.icon ? `url('${props.icon}')` : 'none' }}>\n    {props.label}\n  </div>\n);\nValueRenderer.propTypes = {\n  icon: PropTypes.string,\n  label: PropTypes.string,\n};\n\nclass Select extends Component {\n  static defaultProps = {\n    placeholder: '',\n    searchable: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.onChange ? null : this.props.value,\n    };\n  }\n\n  handleChange = e => {\n    if (this.props.onChange) {\n      this.setState({ value: e.value });\n    } else {\n      this.props.onChange(e);\n    }\n  }\n\n  render() {\n    const { props } = this;\n    return (\n      <ReactSelect\n        {...props}\n        className=\"Select\"\n        placeholder={props.placeholder}\n        onChange={this.handleChange}\n        disabled={props.isDisabled}\n        searchable={props.searchable}\n        menuRenderer={props.useIcons ? menuRenderer : undefined}\n        valueRenderer={ValueRenderer}\n        value={this.props.onChange ? this.props.value : this.state.value}\n      />\n    );\n  }\n}\n\nSelect.propTypes = {\n  placeholder: PropTypes.any,\n  isDisabled: PropTypes.bool,\n  searchable: PropTypes.bool,\n  useIcons: PropTypes.bool,\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport './styles/SelectBox.scss';\n\nconst isSelected = (selected, val) => Array.isArray(selected) ?\n  selected.some(selectedEntry => selectedEntry === val) : selected === val;\n\nconst SelectBox = (props) => {\n  const Comp = props.component ? props.component : 'button';\n  return (\n    <div className={\n      cx(\n        'SelectBox',\n        props.component ? `SelectBox--${props.component.name}` : 'SelectBox--simple',\n        { disabled: props.isDisabled },\n      )}>\n      <div>\n        { props.options.map(option => (\n          <Comp\n            key={option.value}\n            onClick={() => props.onClick(option.value)}\n            alt={props.component ? option.alt : undefined}\n            className={\n              cx(\n                option.className,\n                { 'is-active': isSelected(props.selected, option.value) }\n              )\n            }\n            icon={props.component ? option.icon : undefined}\n            title={option.title || (typeof option.value === 'string' ? option.value : '')}\n            value={option.value}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nSelectBox.propTypes = {\n  component: PropTypes.func,\n  className: PropTypes.string,\n  title: PropTypes.string,\n  selected: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  isDisabled: PropTypes.bool,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    title: PropTypes.string,\n    icon: PropTypes.string,\n    alt: PropTypes.string,\n    className: PropTypes.string,\n  })),\n};\n\nexport default SelectBox;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles/SelectMultipleSimple.scss';\n\nclass SelectMultipleSimple extends Component {\n  static defaultProps = {\n    onChange: () => {},\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.multiple ? [ ] : (this.props.value || '') ,\n    };\n  }\n\n  updateValue = (value) => {\n    this.setState({ value });\n    this.props.onChange(value);\n  }\n\n  handleChange = (event) => {\n    if (this.props.multiple) {\n      const selectedIndex = this.state.value.findIndex(val => val === event.target.value);\n      const isSelected = selectedIndex !== -1;\n      if (!isSelected && this.props.selectMultiple) {\n        this.updateValue([...this.state.value, event.target.value]);\n        return;\n      }\n      if (!isSelected) {\n        this.updateValue([event.target.value]);\n        return;\n      }\n      if (isSelected) {\n        this.updateValue([\n          ...this.state.value.slice(0, selectedIndex),\n          ...this.state.value.slice(selectedIndex + 1),\n        ]);\n        return;\n      }\n    } else {\n      this.updateValue(event.target.value);\n    }\n  }\n\n  render() {\n    const { props } = this;\n    return (\n      <div className=\"SelectMultipleSimple\">\n        <select value={this.state.value} onChange={this.handleChange} disabled={this.props.isDisabled} multiple>\n          { props.options.map(option => (\n            <option\n              key={option.value.toString()}\n              value={option.value}\n              disabled={option.isDisabled}\n            >\n              <div>{option.title || (typeof option.value === 'string' ? option.value : '')}</div>\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nSelectMultipleSimple.propTypes = {\n  multiple: PropTypes.bool,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  isDisabled: PropTypes.bool,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.any,\n    isDisabled: PropTypes.bool,\n  })),\n};\n\nexport default SelectMultipleSimple;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Button from '../Button/AbstractButton';\nimport withMenuWrapper from '../StandardMenu/withMenuWrapper';\nimport './MenuBar.scss';\n\nconst MenuEntry = withMenuWrapper(Button);\n\nconst MenuBar = props => (\n  <menu className=\"window__menu MenuBar\">\n    {props.options && (\n      props.options.map(section => (\n        <MenuEntry\n          className={\n            cx(\n              'window__menu__section MenuBar__section',\n              props.className\n            )\n          }\n          key={`menu-bar-section-${section.title}`}\n          options={section.options}\n        >\n          {section.title}\n        </MenuEntry>\n      ))\n    )}\n  </menu>\n);\n\nMenuBar.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.shape()),\n  className: PropTypes.string,\n};\n\nexport default MenuBar;\n","import React from 'react';\nimport cx from 'classnames';\nimport Start from '../Button/StartButton';\nimport standardMenuWrapper from '../StandardMenu/withMenuWrapper';\n\nconst Started = standardMenuWrapper(Start);\n\nconst StartMenu = (props) => {\n  const { className, ...otherProps } = props;\n  return (\n    <Started\n      className={\n        cx('start-menu TaskBar__start', className)\n      }\n      {...otherProps}\n    />\n  );\n};\n\nStartMenu.propTypes = Started.propTypes;\n\nexport default StartMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notifier = props => (\n  <button\n    className=\"btn TaskBar__notifications__notifier\"\n    title={props.title}\n    onClick={props.onClick}\n    style={{ backgroundImage: `url(\"${props.icon}\")` }}\n  />\n);\n\nNotifier.propTypes = {\n  icon: PropTypes.string,\n  onClick: PropTypes.func,\n  title: PropTypes.string,\n};\n\nNotifier.defaultProps = {\n  onClick: () => {},\n};\n\nexport default Notifier;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notifier from './Notifier';\n\nconst INTERVALS = 20000;\n\nconst formatTime = date => {\n  let hour = date.getHours();\n  let min = date.getMinutes();\n\n  if (hour < 10) { hour = '0' + hour; }\n  if (min < 10) { min = '0' + min; }\n\n  return hour+':'+min;\n};\n\nclass Time extends React.Component {\n  state = {\n    time: this.props.time? new Date(this.props.time) : new Date(),\n  }\n\n  componentDidMount() {\n    if (!this.props.fixedTime) {\n      this.timerId = setInterval(() => {\n        this.getDate();\n      }, INTERVALS);\n    }\n  }\n\n  componentWillUnmount() {\n    if(this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  getDate() {\n    this.setState({ time: new Date(this.state.time.getTime() + INTERVALS) });\n  }\n\n  render() {\n    return (\n      <div className=\"TaskBar__notifications__time\">\n        { formatTime(this.state.time) }\n      </div>\n    );\n  }\n}\n\nconst Notifications = props => (\n  <div className=\"TaskBar__notifications\">\n    {\n      props.notifiers.map( notifier => (\n        <Notifier\n          key={notifier.alt}\n          icon={notifier.icon}\n          onClick={notifier.onClick}\n          title={notifier.alt}\n        />\n      ))\n    }\n    <Time />\n  </div>\n);\n\nNotifications.propsTypes = {\n  notifiers: PropTypes.arrayOf(PropTypes.shape(Notifier.propTypes)),\n};\n\nNotifications.defaultProps = {\n  notifiers: [],\n};\n\nexport default Notifications;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notifiations from './Notifications';\nimport StartMenu from '../StartMenu';\nimport ButtonProgram from '../Button/ButtonProgram';\nimport SmallIconButton from '../Button/ButtonIconSmall';\n\nimport './TaskBar.scss';\n\nconst TaskBar = (props) => (\n  <div className=\"TaskBar\">\n    <StartMenu\n      options={props.options}\n    />\n    {\n      props.quickLaunch && (\n        <div className=\"TaskBar__quick-launch\">\n          {\n            props.quickLaunch.map(qlEntry =>\n              <SmallIconButton\n                key={ `${qlEntry.icon}-QuickLaunch` }\n                alt={ qlEntry.alt }\n                onClick={ qlEntry.onClick }\n                icon={ qlEntry.icon }\n              />\n            )\n          }\n        </div>\n      )\n    }\n    <div className=\"TaskBar__programs\">\n      {\n        props.openWindows &&\n          props.openWindows.map(openWindow =>\n            <ButtonProgram\n              isActive={ openWindow.isActive }\n              onClick={ openWindow.onClick }\n              icon={ openWindow.icon }\n              key={ `${openWindow.icon}-ButtonProgram-${openWindow.title}` }\n            >\n              { openWindow.title }\n            </ButtonProgram>\n          )\n      }\n    </div>\n    <Notifiations notifiers={props.notifiers} />\n  </div>\n);\n\nTaskBar.propTypes = {\n  options: PropTypes.array,\n  quickLaunch: PropTypes.arrayOf(PropTypes.shape(\n    SmallIconButton.propTypes,\n  )),\n  openWindows: PropTypes.arrayOf(PropTypes.shape(\n    ButtonProgram.propTypes,\n  )),\n  notifiers: PropTypes.arrayOf(PropTypes.shape(\n    Notifiations.propsTypes,\n  )),\n};\n\nexport default TaskBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WindowFrame from './WindowFrame';\nimport Button from '../Button/ButtonNav';\n\nimport './styles/WindowAbstract.scss';\n\nconst WindowAbstract = props => (\n  <WindowFrame className={props.className} resizable={props.resizable}>\n    <div className=\"window__heading\">\n      { props.icon && (\n        <div\n          className=\"window__icon\"\n          style={ { backgroundImage: `url('${props.icon}')` } }\n        />\n      )}\n      <div\n        className=\"window__title\"\n      >\n        { props.title }\n      </div>\n      {\n        (props.onHelp) && (\n          <Button className=\"window__help\" onClick={props.onHelp} />\n        )\n      }\n      {\n        (props.onMaximize || props.onMinimize) && (\n          <Button className=\"window__minimize\" onClick={props.onMinimize} />\n        )\n      }\n      {\n        props.isMaximized && props.onRestore && (\n          <Button className=\"window__restore\" onClick={props.onRestore} />\n        )\n      }\n      {\n        !props.isMaximized && props.onMaximize && (\n          <Button className=\"window__maximize\" onClick={props.onMaximize} />\n        )\n      }\n      {\n        props.onClose && (\n          <Button className=\"window__close\" onClick={props.onClose} />\n        )\n      }\n    </div>\n    { props.children }\n  </WindowFrame>\n);\n\nexport const windowProps = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  className: PropTypes.string,\n  isActive: PropTypes.bool,\n  isMaximized: PropTypes.bool,\n  icon: PropTypes.string,\n  resizable: PropTypes.bool,\n\n  onClose: PropTypes.func,\n  onMinimize: PropTypes.func,\n  onMaximize: PropTypes.func,\n  onRestore: PropTypes.func,\n};\n\nWindowAbstract.propTypes = windowProps;\n\nexport default WindowAbstract;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport WindowAbstract from './WindowAbstract';\nimport ButtonForm from '../Button/ButtonForm';\n\nimport './styles/WindowAlert.scss';\n\nconst WindowAlert = props => (\n  <WindowAbstract\n    className=\"WindowAlert window--alert\"\n    onClose={props.onClose}\n    onHelp={props.onHelp}\n    title=\"Error\"\n  >\n    <div\n      className={\n        cx('window--alert__message', { 'has-icon': props.icon})\n      }\n      style={ props.icon && { backgroundImage: `url(${props.icon})`} }\n    >\n      { props.children }\n    </div>\n    <div className=\"window--alert__actions\">\n      { props.onOK && (\n        <ButtonForm\n          onClick={\n            () => {\n              props.onOK();\n            }\n          }\n        >OK</ButtonForm>\n      )}\n      { props.onCancel && (\n        <ButtonForm\n          onClick={\n            () => {\n              props.onCancel();\n            }\n          }\n        >Cancel</ButtonForm>\n      )}\n    </div>\n  </WindowAbstract>\n);\n\nWindowAlert.propTypes = {\n  ...WindowAbstract.propTypes,\n  onOK: PropTypes.func,\n  onCancel: PropTypes.func,\n  children: PropTypes.node,\n  icon: PropTypes.string,\n};\n\nexport default WindowAlert;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport WindowAbstract from './WindowAbstract';\nimport MenuBar from '../MenuBar';\nimport './styles/WindowProgram.scss';\n\nconst insertDefaultFooter = (customFooterElements, minimum = 2) => {\n  const footer = Array.isArray(customFooterElements) ?\n    [...customFooterElements] : [];\n  for(let i = 0; i < minimum; i++) {\n    footer[i] = (footer && footer.text) ? footer[i] : { text: '' };\n  }\n  return footer;\n};\n\nconst Footer = (props = []) => (\n  <footer>\n    { props.entries.map((entry, idx) => (\n      <div\n        key={`${entry}-${idx}`}\n        style={entry.icon && {\n          backgroundImage: `url(${entry.icon})`,\n        }}\n      >\n        {entry.text || ''}\n      </div>\n    ))}\n  </footer>\n);\n\nconst footerType = {\n  text: PropTypes.string,\n  icon: PropTypes.string,\n};\n\nFooter.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.shape(footerType)),\n};\n\nclass WindowProgram extends React.Component {\n  state = {\n    isMaximized: false,\n  }\n\n  maximize = () => this.setState({ isMaximized: true });\n  restore = () => this.setState({ isMaximized: false });\n  render() {\n    const { props } = this;\n    const footer = insertDefaultFooter(props.footer);\n    return (\n      <WindowAbstract\n        className={ cx('WindowProgram window--program', props.className)}\n        icon={props.icon}\n        onClose={props.onClose}\n        onMaximize={() => {\n          if (props.onMaximize) {\n            props.onMaximize();\n          }\n          this.maximize();\n        }}\n        onMinimize={props.onMinimize}\n        onRestore={() => {\n          if (props.onRestore) {\n            props.onRestore();\n          }\n          this.restore();\n        }}\n        title={props.title}\n        isMaximized={this.state.isMaximized}\n        resizable={props.resizable}\n      >\n        <MenuBar\n          className=\"window--explorer__menu\"\n          options={props.menuOptions}\n        />\n        { props.children }\n        { props.footer && (\n          <Footer entries={footer} />\n        )}\n      </WindowAbstract>\n    );\n  }\n}\n\nWindowProgram.propTypes = {\n  ...WindowAbstract.propTypes,\n  menuOptions: PropTypes.arrayOf(\n    PropTypes.any,\n  ),\n  footer: PropTypes.arrayOf(PropTypes.shape(footerType)),\n};\n\nexport default WindowProgram;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ButtonIconLarge from '../../Button/ButtonIconLarge';\nimport StandardMenu from '../../StandardMenu/StandardMenu';\nimport './_options-list.scss';\n\nclass OptionsListDropdown extends Component {\n  openList = () => {\n    this.dropdownButton.focus();\n  }\n  render() {\n    return (\n      <div className=\"options-list__dropdown\">\n        <button\n          ref={(btn) => { this.dropdownButton = btn; }}\n          onClick={this.openList}\n          className=\"options-list__dropdown__button\"\n        />\n        <StandardMenu\n          className=\"options-list__dropdown__list\"\n          options={this.props.options}\n        />\n      </div>\n    );\n  }\n}\n\nclass OptionsList extends Component {\n  static propTypes = {\n    options: PropTypes.arrayOf(PropTypes.shape(ButtonIconLarge.propTypes)),\n    className: PropTypes.string,\n  }\n  state = {\n    displayedIcons: [],\n    dropdown: [],\n  }\n\n  componentDidMount() {\n    const entriesInView = (this.section.clientWidth - 20) / 50;\n    this.setState({\n      displayedIcons: this.props.options.slice(0, entriesInView),\n      dropdown: this.props.options.slice(entriesInView),\n    });\n  }\n\n  render() {\n    return (\n      <menu\n        ref={(section) => { this.section = section; }}\n        className={ cx(this.props.className, 'options-list')}\n      >\n        {this.state.displayedIcons.map(option => (\n          <ButtonIconLarge\n            key={`large-button-${option.title}`}\n            icon={option.icon}\n            title={option.title}\n            onClick={option.onClick}\n            isDisabled={!option.onClick}\n          />\n        ))}\n        { this.state.dropdown.length > 0 && (\n          <OptionsListDropdown options={this.state.dropdown} />\n        )}\n      </menu>\n    );\n  }\n}\n\nexport default OptionsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport WindowProgram from './WindowProgram';\nimport Select from '../Inputs/Select';\nimport OptionsList from './OptionsList';\nimport './styles/WindowExplorer.scss';\n\nclass WindowExplorer extends React.Component {\n  state = {\n    isMaximized: false,\n  }\n\n  maximize = () => this.setState({ isMaximized: true });\n  restore = () => this.setState({ isMaximized: false });\n  render() {\n    const { props } = this;\n    return (\n      <WindowProgram\n        className={ cx('WindowExplorer window--explorer', props.className)}\n        icon={props.icon}\n        onClose={props.onClose}\n        onMaximize={props.onMaximize}\n        onMinimize={props.onMinimize}\n        onRestore={props.onRestore}\n        title={props.title}\n        resizable={props.resizable}\n        footer={props.footer}\n        menuOptions={props.menuOptions}\n      >\n        {props.explorerOptions && (\n          <OptionsList\n            className=\"window--explorer__options\"\n            options={props.explorerOptions}\n          />\n        )}\n        <menu className=\"window--explorer__address\">\n          <div className=\"window--explorer__address__title\">Address</div>\n          <Select placeholder={<span>Test</span>} isDisabled />\n        </menu>\n        <div className=\"window--explorer__view\">\n          {props.children}\n        </div>\n      </WindowProgram>\n    );\n  }\n}\n\nWindowExplorer.defaultProps = {\n  footer: [],\n  menuOptions: [],\n};\n\nWindowExplorer.propTypes = {\n  ...WindowProgram.propTypes,\n  menuOptions: PropTypes.arrayOf(\n    PropTypes.any,\n  ),\n  explorerOptions: PropTypes.shape(OptionsList.propTypes.options),\n};\n\nexport default WindowExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './_details-section.scss';\n\nconst DetailsSection = props => (\n  <section className=\"DetailsSection window__section\">\n    <div className=\"title\">{ props.title }</div>\n    { props.children }\n  </section>\n);\n\nDetailsSection.propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n};\n\nexport default DetailsSection;\n"],"names":["Theme","cx","props","className","style","children","propTypes","PropTypes","node","string","shape","AbstractButton","state","handleMouse","func","mouseDown","setState","handleClick","e","button","focus","onClick","handleBlur","onBlur","handleContextMenu","preventDefault","stopPropagation","onContextMenu","handleDoubleClick","onDoubleClick","btn","isActive","isDisabled","onMouseDown","onMouseUp","Component","commonButtonPropTypes","oneOfType","bool","ButtonForm","Button","ButtonNav","ButtonProgram","backgroundImage","icon","any","StartButton","ButtonIconLarge","title","ButtonIconSmall","WindowFrame","resizable","StandardMenuItem","type","options","mouseEnterItem","disabled","closeOnClick","undefined","value","defaultProps","error","isRequired","arrayOf","DIVIDER","flattenWithDividers","reduce","acc","val","Array","isArray","push","concat","StandardMenu","hasOptions","direction","isVisible","length","map","option","includes","toString","standardMenuProps","oneOf","withContextLogic","target","newOptions","updateActive","split","clone","addBlurListener","body","addEventListener","removeBlurListener","removeEventListener","buttonClick","isOpen","handleEvent","onEvent","newState","el","contains","handleSelectionClose","activeFields","idx","changeIdx","findIndex","optIdx","subIdx","opt","renderedMenu","ContextButton","nextProps","prevState","AbstractIcon","disableAction","doubleReady","checkDoubleClick","iconProps","alt","contents","ExplorerIcon","ListIcon","ExplorerView","fixedWidth","fixedHeight","backgroundColor","backgroundSize","backgroundRepeat","backgroundPosition","Toggle","id","checked","onChange","name","label","toggleProps","Checkbox","Radio","InputText","initialValue","handleChange","onKeyDown","onFocus","DefaultOptionComponent","menuRenderer","focusedOption","focusOption","inputValue","instancePrefix","onOptionRef","onSelect","optionClassName","optionComponent","removeValue","selectValue","valueArray","valueKey","Option","i","isSelected","some","x","isFocused","optionClass","ref","object","array","ValueRenderer","Select","placeholder","searchable","useIcons","selected","selectedEntry","SelectBox","Comp","component","SelectMultipleSimple","updateValue","event","multiple","selectedIndex","selectMultiple","slice","MenuEntry","withMenuWrapper","MenuBar","section","Started","standardMenuWrapper","Start","StartMenu","otherProps","Notifier","INTERVALS","formatTime","hour","date","getHours","min","getMinutes","Time","time","Date","fixedTime","timerId","setInterval","getDate","getTime","React","Notifications","notifiers","notifier","propsTypes","TaskBar","quickLaunch","SmallIconButton","qlEntry","openWindows","openWindow","Notifiations","WindowAbstract","onHelp","onMaximize","onMinimize","isMaximized","onRestore","onClose","windowProps","WindowAlert","onOK","onCancel","insertDefaultFooter","customFooterElements","minimum","footer","text","Footer","entries","entry","footerType","WindowProgram","maximize","restore","menuOptions","OptionsListDropdown","openList","dropdownButton","OptionsList","entriesInView","clientWidth","displayedIcons","dropdown","WindowExplorer","explorerOptions","DetailsSection"],"mappings":"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"}