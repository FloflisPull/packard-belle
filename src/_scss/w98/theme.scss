/* stylelint-disable selector-pseudo-class-no-unknown */
@import "./var/var";
@import "./var/colors";
@import "./mixins/box-shadows";
@import "./var/uris";
@import "./var/fontBackup";
@import "./var/cursors.scss";

@font-face {
  font-family: "MSFont";
  src: url($ms11) format("woff2");
}
@font-face {
  font-family: "MSFont11";
  src: url("./fonts/ms98s11a10d02.ttf") format("ttf");
}

// sourced from https://github.com/1000hz/winmine-exe/tree/master/static/fonts
@font-face {
  font-family: "MSSansSerif";
  src: url("./fonts/MSSansSerif.woff2") format("woff2");
  font-weight: normal;
}
@font-face {
  font-family: "MSSansSerif";
  src: url("./fonts/MSSansSerifBold.woff2") format("woff2");
  font-weight: bold;
}

@mixin scrollbar-button-shadowing {
  background: $grey;
  box-shadow: inset -1px -1px 0px $darkgrey, inset 1px 1px 0px 0px #ffffff;
  border: 1px solid $black;
  border-top: 1px solid $grey;
  border-left: 1px solid $grey;
}

html {
  font-size: $base-font-size;

  button {
    font-size: $base-font-size;
  }

  menu {
    padding: 0px;
    margin: 0px;
  }

  body {
    font-family: "MSSansSerif", "MSFont", "MSFont11", "Segoe UI", Tahoma, Geneva,
      Verdana, sans-serif;
    min-width: 200px;
    margin: 0px;
  }

  .disabled {
    color: $darkgrey;
  }
}

.w98 {
  font-family: "MSSansSerif", "MSFont", "MSFont11", "Segoe UI", Tahoma, Geneva,
    Verdana, sans-serif;
  width: 100%;
  height: 100%;
  image-rendering: pixelated;
  position: relative;
  transform: scale(1);
  *,
  & {
    font-family: "MSSansSerif", "MSFont", "MSFont11", "Segoe UI", Tahoma, Geneva,
      Verdana, sans-serif;

    cursor: url($cursor), default;

    .default {
      cursor: url($cursor), default;
    }
    .none {
      cursor: none;
    }
    .help {
      cursor: url($help), help;
    }
    .pointer {
      cursor: url($pointer), pointer;
    }
    .progress {
      cursor: url($progress), progress;
    }
    .wait {
      cursor: url($wait), wait;
    }
    .crosshair {
      cursor: url($crosshair), crosshair;
    }
    .text {
      cursor: url($text), text;
    }
    .vertical-text {
      cursor: url($verticalText), vertical-text;
    }
    .alias {
      cursor: url($alias), alias;
    }
    .copy {
      cursor: url($copy), copy;
    }
    .move {
      cursor: url($move), move;
    }
    .no-drop {
      cursor: url($noDrop), no-drop;
    }
    .not-allowed {
      cursor: url($notAllowed), not-allowed;
    }
    .grab {
      cursor: url($grab), grab;
    }
    .grabbing {
      cursor: url($grabbing), grabbing;
    }
    .col-resize {
      cursor: url($colResize), col-resize;
    }
    .row-resize {
      cursor: url($rowResize), row-resize;
    }
    .n-resize {
      cursor: url($nResize), n-resize;
    }
    .e-resize {
      cursor: url($eResize), e-resize;
    }
    .s-resize {
      cursor: url($sResize), s-resize;
    }
    .w-resize {
      cursor: url($wResize), w-resize;
    }
    .ns-resize {
      cursor: url($nsResize), ns-resize;
    }
    .ew-resize {
      cursor: url($ewResize), ew-resize;
    }
    .ne-resize {
      cursor: url($neResize), ne-resize;
    }
    .nw-resize {
      cursor: url($nwResize), nw-resize;
    }
    .se-resize {
      cursor: url($seResize), se-resize;
    }
    .sw-resize {
      cursor: url($swResize), sw-resize;
    }
    .nesw-resize {
      cursor: url($neswResize), nesw-resize;
    }
    .nwse-resize {
      cursor: url($nwseResize), nwse-resize;
    }
    .zoom-in {
      cursor: url($zoomIn), zoom-in;
    }
    .zoom-out {
      cursor: url($zoomOut), zoom-out;
    }
  }
  &.x2 {
    *,
    & {
      cursor: url($cursorX2), default;
    }
    transform: scale(2);
  }

  /* stylelint-disable selector-max-specificity */
  ::-webkit-scrollbar {
    width: 16px;
    height: 16px;
    background-color: #ffffff;
    background-image: url($grey-checkered);

    &-track {
      position: relative;
    }

    &-thumb {
      @include scrollbar-button-shadowing();
    }

    &-button {
      @include scrollbar-button-shadowing();
      &:start:decrement,
      &:end:increment {
        height: 16px;
        width: 16px;
        display: block;
        background-repeat: no-repeat;
        background-color: $grey;
        &:active {
          border: 1px solid $darkgrey;
          box-shadow: none;
          background-color: $grey;
        }
      }

      &:horizontal:decrement {
        background-image: url($arrow-left);
        background-position: 4px 3px;
        &:active {
          background-position: 5px 4px;
        }
      }
      &:horizontal:increment {
        background-image: url($arrow-right);
        background-position: 5px 3px;
        &:active {
          background-position: 6px 4px;
        }
      }
      &:vertical:decrement {
        background-image: url($arrow-up);
        background-position: 3px 5px;
        &:active {
          background-position: 4px 6px;
        }
      }
      &:vertical:increment {
        background-image: url($arrow-down);
        background-position: 3px 5px;
        &:active {
          background-position: 4px 6px;
        }
      }
    }
    &-corner {
      /*
      background-image: url(resources/corner.png);
      background-repeat: no-repeat;
      */
      background-color: $grey;
    }
  }

  ::selection {
    color: #ffffff;
    background-color: $blue;
  }
}
